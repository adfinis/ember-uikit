name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: 14

jobs:
  lint:
    name: Lint
    runs-on: [ubuntu-latest]
    timeout-minutes: 5

    strategy:
      matrix:
        target: [js, hbs]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ hashFiles('yarn.lock') }}
            yarn-

      - name: Install dependencies
        run: yarn install

      - name: Lint ${{ matrix.target }}
        run: yarn lint:${{ matrix.target }}

  test:
    name: Tests
    needs: [lint]
    runs-on: [ubuntu-latest]
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ hashFiles('yarn.lock') }}
            yarn-

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test:ember
        env:
          COVERAGE: true

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage/lcov.info

  test-floating:
    name: Floating Tests
    needs: [lint]
    runs-on: [ubuntu-latest]
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --no-lockfile

      - name: Run tests
        run: yarn test:ember

  test-compatibility:
    name: Compatibility Tests
    needs: [lint]
    runs-on: [ubuntu-latest]
    timeout-minutes: 10

    strategy:
      matrix:
        scenario:
          - ember-lts-3.28
          - ember-lts-3.24
          - ember-release
          - ember-beta
          - ember-canary
          - ember-classic
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ hashFiles('yarn.lock') }}
            yarn-

      - name: Install dependencies
        run: yarn install

      - uses: actions/cache@v2
        with:
          path: |
            yarn
            package
            yarn.lock
          key: yarn-${{ matrix.scenario }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('config/ember-try.js') }}
          restore-keys: |
            yarn-${{ matrix.scenario }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('config/ember-try.js') }}
            yarn-${{ matrix.scenario }}-
            yarn-

      - name: Run tests
        run: yarn ember try:one ${{ matrix.scenario }} --skip-cleanup
